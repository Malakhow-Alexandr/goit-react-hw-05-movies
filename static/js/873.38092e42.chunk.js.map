{"version":3,"file":"static/js/873.38092e42.chunk.js","mappings":"6PAAaA,EAAuB,SAAAC,GAAI,OACtCA,EAAI,QAAYC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,MAA8B,CAChDF,GAAAA,EACAC,OAAO,WAAD,OAAaA,GACnBC,QAAAA,EAHkB,GADkB,ECIxCC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,SAAU,QACVC,QAJc,oCAOT,I,QAAMC,EAAY,mCAAG,WAAON,EAAIO,GAAX,2FACHJ,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,YAAkC,CACvDQ,OAAQD,EAAWC,SAFK,uBAClBV,EADkB,EAClBA,KAGFW,EAAcZ,EAAqBC,GAJf,kBAMnBW,GANmB,2CAAH,wD,6BCRZC,EAAkBC,EAAAA,EAAAA,GAAH,6CAGfC,EAAoBD,EAAAA,EAAAA,EAAH,0GAMjBE,EAAoBF,EAAAA,EAAAA,EAAH,8F,SCO9B,EAVoB,SAAC,GAAD,SAAGG,QACbf,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACQ,EAAD,YACE,SAACE,EAAD,UAAoBX,KACpB,SAACY,EAAD,UAAoBX,MAFAF,EAKzB,GARiB,ECNPe,EAAcJ,EAAAA,EAAAA,GAAH,8HCyExB,EApEgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOF,EAAP,KAAgBG,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAE5BP,GAAW,GAEX,IAAMQ,EAAgB,mCAAG,2FACvBR,GAAW,GADY,kBAIEb,EAAagB,EAASG,GAJxB,OAIfG,EAJe,OAKrBX,EAAWW,GALU,gDAOrBP,EAAS,EAAD,IAEe,cAAnB,uCAAOQ,UACTC,QAAQC,IAAR,MAVmB,yBAarBZ,GAAW,GAbU,4EAAH,qDAgBtBQ,GACD,GAAE,CAACL,KAGF,gCACGF,GAA2B,aAAlBA,EAAMS,UACd,gDAAwBT,EAAMS,QAA9B,0BAGDX,IACC,gBACEc,MAAO,CACLC,WAAY,QACZC,YAAa,OACbC,UAAW,QAJf,UAOE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,aAAa,kBACbC,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,cAKJ,IAAnB5B,EAAQ6B,QAAiBzB,GAGxB,SAACH,EAAD,WACE,SAAC,EAAD,CAAaD,QAASA,OAHxB,uEAQP,C","sources":["utils/transformReviewsData.js","utils/fetchReviewsList.js","components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const transformReviewsData = data =>\n  data['results'].map(({ id, author, content }) => ({\n    id,\n    author: `Author: ${author}`,\n    content,\n  }));\n","import axios from 'axios';\nimport { transformReviewsData } from './transformReviewsData';\n\nconst API_KEY = '23b29489e8683674f60bf34658264370';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  language: 'en-US',\n  api_key: API_KEY,\n};\n\nexport const fetchReviews = async (id, controller) => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    signal: controller.signal,\n  });\n  const reviewsData = transformReviewsData(data);\n\n  return reviewsData;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewContainer = styled.li`\n  padding: 0px 5px;\n`;\nexport const ReviewsAuthorName = styled.p`\n  margin: 5px 0px 10px;\n  padding: 0;\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const ReviewsAuthorDesc = styled.p`\n  margin: 0;\n  padding: 0;\n  font-size: 15px;\n  font-weight: 400;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  ReviewsAuthorName,\n  ReviewContainer,\n  ReviewsAuthorDesc,\n} from './ReviewsItem.styled';\n\nconst ReviewsItem = ({ reviews }) =>\n  reviews.map(({ id, author, content }) => {\n    return (\n      <ReviewContainer key={id}>\n        <ReviewsAuthorName>{author}</ReviewsAuthorName>\n        <ReviewsAuthorDesc>{content}</ReviewsAuthorDesc>\n      </ReviewContainer>\n    );\n  });\n\nexport default ReviewsItem;\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  padding: 0px 10px;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'utils/fetchReviewsList';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport ReviewsItem from 'components/ReviewsItem/ReviewsItem';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    setLoading(true);\n\n    const fetchReviewsData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await fetchReviews(movieId, abortController);\n        setReviews(response);\n      } catch (error) {\n        setError(error);\n\n        if (error?.message !== 'canceled') {\n          console.log(error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && error.message !== 'canceled' && (\n        <p>Sorry we have error:{error.message} please reload page!</p>\n      )}\n\n      {loading && (\n        <div\n          style={{\n            marginLeft: '420px',\n            marginRight: 'auto',\n            marginTop: '30px',\n          }}\n        >\n          <ThreeCircles\n            height=\"80\"\n            width=\"80\"\n            wrapperClass=\"spinner-wrapper\"\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"#0a598d\"\n            innerCircleColor=\"#260a8d\"\n            middleCircleColor=\"#6a0474\"\n          />\n        </div>\n      )}\n\n      {reviews.length === 0 && !loading ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ReviewsList>\n          <ReviewsItem reviews={reviews} />\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["transformReviewsData","data","map","id","author","content","axios","language","api_key","fetchReviews","controller","signal","reviewsData","ReviewContainer","styled","ReviewsAuthorName","ReviewsAuthorDesc","reviews","ReviewsList","useState","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","abortController","AbortController","fetchReviewsData","response","message","console","log","style","marginLeft","marginRight","marginTop","height","width","wrapperClass","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","length"],"sourceRoot":""}