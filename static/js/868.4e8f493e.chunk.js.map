{"version":3,"file":"static/js/868.4e8f493e.chunk.js","mappings":"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","sources":["components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","utils/fetchTrendinngMovies.js","pages/Home/Home.jsx","utils/formatReleaseDate.js","utils/transformTrendingMovieData.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  margin-left: auto;\n  margin-right: auto;\n  width: 220px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\nexport const Picture = styled.img`\n  border-radius: 10px;\n`;\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  position: relative;\n`;\nexport const Rating = styled.p`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: -10px;\n  left: 177px;\n  font-weight: bold;\n  color: #83cf57;\n  font-size: 18px;\n  transition: color 250ms ease, transform 250ms ease;\n  &:hover {\n    color: red;\n    transform: scale(1.2);\n  }\n`;\nexport const Release = styled.p`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: -10px;\n  left: 7px;\n  font-weight: bold;\n  color: #83cf57;\n  transition: color 250ms ease, transform 250ms ease;\n  &:hover {\n    color: red;\n    transform: scale(1.2);\n  }\n`;\n\nexport const Title = styled.p`\n  padding: 0;\n  margin: 0px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #000;\n  .link:hover & {\n    color: #6e02ac;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Item,\n  LinkStyled,\n  Rating,\n  Picture,\n  Release,\n  Title,\n} from './MovieListItem.styled';\n\nconst MovieListItem = ({ movies, location }) => {\n  return (\n    <>\n      {movies.map(({ id, title, rating, poster, release }) => (\n        <Item key={id}>\n          <LinkStyled\n            className=\"link\"\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <Picture src={poster} alt={title} width=\"220px\" height=\"315px\" />\n            <Title>{title}</Title>\n            <Rating>{rating}</Rating>\n            <Release>{release}</Release>\n          </LinkStyled>\n        </Item>\n      ))}\n    </>\n  );\n};\n\nexport default MovieListItem;\n\nMovieListItem.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      rating: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n      release: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  location: PropTypes.shape({\n    hash: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    state: PropTypes.object,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieListStyled = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 15px;\n`;\n","import MovieListItem from 'components/MovieListItem/MovieListItem';\nimport { MovieListStyled } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <MovieListStyled>\n      <MovieListItem movies={movies} location={location} />\n    </MovieListStyled>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      rating: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n      release: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  location: PropTypes.shape({\n    hash: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    state: PropTypes.object,\n  }).isRequired,\n};\n","import axios from 'axios';\nimport { transformTrendingMovieData } from './transformTrendingMovieData';\n\nconst API_KEY = '23b29489e8683674f60bf34658264370';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  language: 'en-US',\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovie = async controller => {\n  const { data } = await axios.get('/trending/movie/day', {\n    signal: controller.signal,\n  });\n\n  const movies = transformTrendingMovieData(data);\n\n  return movies;\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrendingMovie } from 'utils/fetchTrendinngMovies';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nconst Home = () => {\n  const [trendingMovie, setTrendingMovie] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    setLoading(true);\n\n    const fetchTrendingData = async () => {\n      try {\n        const data = await fetchTrendingMovie(abortController);\n        setTrendingMovie(data);\n      } catch (error) {\n        setError(error);\n\n        if (error?.message !== 'canceled') {\n          console.log(error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrendingData();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {error && error.message !== 'canceled' && (\n        <p>Sorry we have error:{error.message} please reload page!</p>\n      )}\n      {trendingMovie.length === 0 && (\n        <div\n          style={{\n            marginLeft: '420px',\n            marginRight: 'auto',\n            marginTop: '30px',\n          }}\n        >\n          <ThreeCircles\n            height=\"80\"\n            width=\"80\"\n            wrapperClass=\"spinner-wrapper\"\n            ariaLabel=\"three-circles-rotating\"\n            outerCircleColor=\"#0a598d\"\n            innerCircleColor=\"#260a8d\"\n            middleCircleColor=\"#6a0474\"\n          />\n        </div>\n      )}\n      {!loading && <MoviesList movies={trendingMovie} location={location} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import { format } from 'date-fns';\n\nexport const formatReleaseDate = date => {\n  return format(Date.parse(date), 'y');\n};\n","import { formatReleaseDate } from './formatReleaseDate';\nexport const defaultPic =\n  'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n\nexport const transformTrendingMovieData = data => {\n  return data['results'].map(\n    ({\n      id,\n      release_date: release,\n      title,\n      vote_average: rating,\n      poster_path: poster,\n    }) => {\n      return {\n        id,\n        title,\n        rating: `‚≠ê${Math.round(rating)}`,\n        poster: !poster\n          ? defaultPic\n          : `https://image.tmdb.org/t/p/w500${poster}`,\n        release: !release ? `(unknown)` : `(${formatReleaseDate(release)})`,\n      };\n    }\n  );\n};\n"],"names":["Item","styled","Picture","LinkStyled","Link","Rating","Release","Title","movies","location","map","id","title","rating","poster","release","className","to","state","from","src","alt","width","height","MovieListStyled","axios","language","api_key","fetchTrendingMovie","controller","signal","data","transformTrendingMovieData","useState","trendingMovie","setTrendingMovie","error","setError","loading","setLoading","useLocation","useEffect","abortController","AbortController","fetchTrendingData","message","console","log","abort","length","style","marginLeft","marginRight","marginTop","wrapperClass","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","formatReleaseDate","date","format","Date","parse","defaultPic","release_date","vote_average","poster_path","Math","round"],"sourceRoot":""}